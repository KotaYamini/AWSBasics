1. IAM refers to Identity & Access Management, Global Service
2. Root account created by default, shouldn't be used or shared.
3. Users are people within your organization, and can be grouped
4. Groups only contain users,not other groups.
5. Users don't have to belong to a group, and user can belong to multiple groups.

IAM Permissions:

1. Users or Groups can be assigned JSON documents called policies.
2. These policies define the permissions of the users.
3. In AWS, you apply the least privilege principle: dont give morepermissions than a user needs.

{
"Version": "2012-10-17",
"Statement": [
{
"Effect": "Allow",
"Action": "ec2: Describe*",
"Resource": "*"
},
{
"Effect": "Allow",
"Action": "elasticloadbalancing: Describe*",
"Resource": "*"
},
{
"Effect": "Allow",
"Action": [
"cloudwatch:ListMetrics",
"cloudwatch:GetMetricsStatistics",
"cloudwatch:Describe"
],
"Resource": "\*"
}
]
}

## IAM Policies Structure

Consists of

1.  Version: policy language version, always include "2012-10-17".
2.  Id: an identifier for the policy(optional).
3.  Statement: one or more individual statements(required).

Statements consists of

1.  Sid: an identifier for the statement(optional).
2.  Effect: whether the statement allows or denies access(Allow, Deny).
3.  Principal: account/user/role to which this policy applied to
4.  Action: list of actions this policy allows or denies.
5.  Resource: list of resources to which the actions applied to
6.  Condition: conditions for when this policy is in effect(optional).

{
"Version": "2012-10-17",
"Id": "S3-Account-Permissions",
"Statement": [
{
"Sid" : "1",
"Effect" : "Allow",
"Principal": {
"AWS": ["arn:aws:iam::123456789012:root"]
},
"Action": [
"s3:GetObject",
"s3:PutObject"
],
"Resource": ["arn:aws:s3:::mybucket/*"]
}
]
}
