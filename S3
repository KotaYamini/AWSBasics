# Amazon S3

1. Amazon S3 is one of the main building blocks of AWS
2. Its advertised as "infinitely scaling" storage.
3. May websites use amazon S3 as a backbone.
4. Many AWS services use Amazon S3 as an integration as well.
5. We'll have a step-by-step approach to S3.

# Amazon S3 Use Cases:

1. Backup and storage
2. Disaster Recovery
3. Archive
4. Hybrid Cloud Storage
5. Application hosting
6. Media hosting ie.video files, images and so on
7. Data lakes & big data analytics
8. Software Delivery
9. Static website

## Amazon S3- Buckets:

1. Amazon S3 allows people to store objects (files) in "buckets" (directories).
2. Buckets must have a globally unique name (across all regions all accounts).
3. Buckets are defined at the region level.
4. S3 looks like a global service but buckets are created in a region.
5. Naming Convention:

- No uppercase, No underscore.
- 3- 63 characters long
- Not an IP
- Must start with lowercase letter or number
- Must NOT start with prefix xn--
- Must NOT end with suffix -s3alias.

# Amazon S3 - Objects

1. Objects (files) have a key
2. The key is the FULL path:

- s3://my-bucket/my_file.txt
- s3://my-bucket/my_folder/another_folder/my_file.txt

3. The key is composed of prefix + object name

- s3://my-bucket/my_folder/another_folder/my_file.txt
  Here, my_folder/another_folder is prefix and my_file.txt is an object name.

4. There's no concept of "directories" within buckets.
5. Just keys with very long names that contain slashes ("/").

Object values are the content of the body:

1. Maximum Object size is 5TB(5000GB).
2. If uploading more than 5GB, must use "multi-part upload".
3. Metadata (list of text key/value pairs - system or user metadata).
4. Tags ( Unicode key/value pair- upto 10)- useful for security/lifecycle.
5. Version ID (if versioning is enabled).
